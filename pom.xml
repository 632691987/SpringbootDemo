<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.springboot</groupId>
    <artifactId>interview</artifactId>
    <version>1.0</version>

    <name>interview</name>

    <properties>
        <spring.boot.version>2.0.4.RELEASE</spring.boot.version>
        <jersey.version>2.26</jersey.version>
        <spring.version>5.0.8.RELEASE</spring.version>
        <HikariCP.version>2.6.3</HikariCP.version>
        <mysql.driver.version>5.1.38</mysql.driver.version>
        <jackson.version>2.8.9</jackson.version>
        <jetty.version>9.4.8.v20171121</jetty.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <google.guava.version>26.0-jre</google.guava.version>
        <google.gson.version>2.8.1</google.gson.version>
        <dozer.version>5.5.1</dozer.version>
        <ehcache.version>3.4.0</ehcache.version>
        <javax-cache.version>1.1.0</javax-cache.version>
        <commons-jexl.version>1.1</commons-jexl.version>



        <!--web-->
        <org.webjars.jquery.version>3.3.1</org.webjars.jquery.version>
        <org.webjars.bootstrap.version>4.1.3</org.webjars.bootstrap.version>

        <junit.version>4.12</junit.version>

        <!--
        Performance, two component, metric and perf4j, they are two different system, no relationship
        -->
        <metrics.version>3.2.5</metrics.version>
        <perf4j.version>0.9.16</perf4j.version>
        <jmxtrans.version>1.2.7</jmxtrans.version>


        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <!-- The destination file for the code coverage report has to be set to the same value
             in the parent pom and in each module pom. Then JaCoCo will add up information in
             the same report, so that, it will give the cross-module code coverage. -->
        <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.itReportPath>
        <sonar.language>java</sonar.language>

        <!--test framework-->
        <easymock.version>3.5.1</easymock.version>
    </properties>

    <dependencies>
        <!--Spring boot-->

        <!--
        这个starter 可有可无，因为全部得springboot 组建都是依赖starter 提供得 logging的，
        因此去掉它就可以去掉至少springboot 和 spring framework 得所有log，
        然后就可以额外添加自己的。当然，这样太过与麻烦了.
        -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring.boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <dependency><!--导入配置文件处理器，配置文件进行绑定的时候就会有提示-->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!--Spring boot data-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!--Tool-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.11</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${org.webjars.jquery.version}</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${org.webjars.bootstrap.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--This plugin is for wrapped as executable jar-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
